{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Contacts/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/selectors.js","components/Form/Form.js","components/Contacts/ContactItem/ContactItem.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/App/App.js","redux/reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleNameChange","e","target","value","onSubmit","preventDefault","id","uuidv4","find","alert","actions","className","style","formSection","formLabel","onChange","type","pattern","title","required","formBtn","ContactItem","contactsButton","onClick","Contacts","contactsList","map","Filter","App","createReducer","payload","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.df8bdde0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__pprNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsButton\":\"ContactItem_contactsButton__1Oqn8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsHead\":\"Filter_contactsHead__yZzxc\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contacts/add\");\n\nexport const deleteContact = createAction(\"contacts/delete\");\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./Form.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\nimport { getContacts } from \"../../redux/selectors\";\n\nfunction Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleNameChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formReset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    // const newContact = { name, number, id };\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(actions.addContact({ name, number, id }));\n    formReset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.formSection}>\n      <label className={style.formLabel}>\n        Name{\" \"}\n        <input\n          onChange={handleNameChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={style.formLabel}>\n        Phone{\" \"}\n        <input\n          onChange={handleNameChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифер и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={style.formBtn}>\n        Save\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport style from \"./ContactItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../../redux/actions\";\n\nfunction ContactItem({ name, id, number }) {\n  const dispatch = useDispatch();\n\n  return (\n    <li className=\"\">\n      <p className=\"\">{name}:</p>\n      <p>{number}</p>\n      <button\n        className={style.contactsButton}\n        onClick={() => dispatch(actions.deleteContact(id))}\n      >\n        delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport style from \"./Contacts.module.css\";\nimport ContactItem from \"./ContactItem/ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\n\nfunction Contacts() {\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    <section className={style.contacts}>\n      <ul className={style.contactsList}>\n        {contacts.map(({ name, number, id }) => (\n          <ContactItem key={id} name={name} number={number} id={id} />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default Contacts;\n","import style from \"./Filter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport * as actions from \"../../redux/actions\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={style.filter}>\n      Find contact by name{\" \"}\n      <input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={(e) => dispatch(actions.changeFilter(e.target.value))}\n      ></input>\n    </label>\n  );\n}\n\nexport default Filter;\n","import \"./App.css\";\nimport Form from \"../Form/Form\";\nimport Contacts from \"../Contacts/Contacts\";\nimport Filter from \"../Filter/Filter\";\n\nfunction App() {\n  return (\n    <section className=\"phonebook\">\n      <h1>Phonebook</h1>\n      <Form />\n\n      <h2 className=\"contactsHead\">Contacts </h2>\n      <Filter />\n      <Contacts />\n    </section>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./reducer\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSection\":\"Form_formSection__Xci7m\",\"formLabel\":\"Form_formLabel__9lQCC\",\"formBtn\":\"Form_formBtn__3tQEI\"};"],"sourceRoot":""}